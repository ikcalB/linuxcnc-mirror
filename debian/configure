#!/bin/bash
# dpkg configuration script for linuxcnc
# Copyright (C) 2006 Jeff Epler
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# When used to produce a debian package, this file is a script "used to
# control compilation and installation of the executable"

# Notes
#  1) to build without doc packages, invoke with BUILD_DOCS=0
#  2) for verbose messages, invoke with VERBOSE=1


usage () {
    P=${0##*/}
    cat <<EOF
$P: Set up debian/ files to build for a particular kernel

Usage:
    $P uspace
        Build for a userspace realtime systems or simulator

    $P sim
        Deprecated synonym for '$P uspace'

    $P [kernel-version]
        Build for the realtime kernel [kernel-version], such as 2.6.12-magma

    $P -r
        Build for the currently running kernel

    $P -a
        If the currently running kernel has realtime extensions, use it.
        Otherwise use any available realtime kernel it can find.
EOF
} # usage ()

verbose () {
  [ $VERBOSE ] && echo $*
} # verbose ()

extra_build () {
  EXTRA_BUILD=dvipng # default

  case $1 in

    Ubuntu-14.*|\
   Ubuntu-15.04|\
 LinuxMint-17.*) EXTRA_BUILD=dvipng,texlive-extra-utils,texlive-latex-recommended,texlive-fonts-recommended,ghostscript,imagemagick,texlive-font-utils
                 ;;

   Ubuntu-10.04|\
   Ubuntu-11.04|\
   Ubuntu-12.04|\
   Ubuntu-12.10) EXTRA_BUILD=dvipng,texlive-extra-utils,texlive-latex-recommended,texlive-fonts-recommended,ghostscript,imagemagick,texlive-font-utils,libgnomeprintui2.2-dev
                ;;

     Debian-7.*|\
    Ubuntu-8.04|\
    Ubuntu-9.10) EXTRA_BUILD=dvipng,texlive-extra-utils,texlive-latex-recommended,texlive-fonts-recommended,ghostscript,imagemagick,libgnomeprintui2.2-dev
                ;;

     Debian-8.*|\
 Debian-testing) EXTRA_BUILD=dvipng,texlive-extra-utils,texlive-latex-recommended,texlive-fonts-recommended,ghostscript,imagemagick,texlive-lang-polish,texlive-font-utils
                 ;;

    Debian-5.0*|\
    Debian-6.0*) EXTRA_BUILD=dvipng,libgnomeprintui2.2-dev
                 ;;

              *) echo "extra_build(): unknown distribution: $1"
                 echo "configuration may be wrong!"
                 ;;
  esac
  verbose "extra_build:$1: EXTRA_BUILD=$EXTRA_BUILD"
} # extra_build ()

tcltk_version () {
  TCLTK_VERSION=8.5 # default
  case $1 in
     Ubuntu-8.04|\
     Debian-5.0*)  TCLTK_VERSION=8.4 ;;

     Ubuntu-9.10|\
    Ubuntu-10.04|\
    Ubuntu-11.04|\
    Ubuntu-12.04|\
    Ubuntu-12.10|\
     Debian-6.0*|\
      Debian-7.*)  TCLTK_VERSION=8.5 ;;

     Ubuntu-14.*|\
    Ubuntu-15.04|\
  LinuxMint-17.*|\
      Debian-8.*|\
  Debian-testing)  TCLTK_VERSION=8.6 ;;

               *)  echo "tcltk_version(): unknown distribution: $1"
                   echo "configuration may be wrong!"
                   ;;
  esac
  verbose "tcltk_version:$1: TCLTK_VERSION=$TCLTK_VERSION"
} # tcltk_version ()

libreadline_dev () {
  LIBREADLINE_DEV=libreadline-gplv2-dev ;# default
  case $1 in
    Ubuntu-8.04|\
    Ubuntu-9.10|\
   Ubuntu-10.04) LIBREADLINE_DEV=libreadline5-dev ;;

     Debian-7.*|\
     Debian-8.*|\
 Debian-testing) LIBREADLINE_DEV=libreadline-gplv2-dev ;;

              *) echo "libreadline_dev(): unknown distribution: $1"
                 echo "configuration may be wrong!"
                 ;;
  esac
  verbose "libreadline_dev:$1: LIBREADLINE_DEV=$LIBREADLINE_DEV"
} # libreadline_dev ()

subst () {
  sed \
    -e "s|@MODULE_PATH@|$MODULE_PATH|g" \
    -e "s|@MODULE_EXT@|$MODULE_EXT|g" \
    -e "s|@KERNEL_VERSION@|$KERNEL_VERSION|g" \
    -e "s|@KERNEL_DEPENDS@|$KERNEL_DEPENDS|g" \
    -e "s|@KERNEL_HEADERS@|$KERNEL_HEADERS|g" \
    -e "s|@EXTRA_BUILD@|$EXTRA_BUILD|g" \
    -e "s|@LIBREADLINE_DEV@|$LIBREADLINE_DEV|g" \
    -e "s|@EXTRA_RECOMMENDS@|$EXTRA_RECOMMENDS|g" \
    -e "s|@MAIN_PACKAGE_NAME@|$MAIN_PACKAGE_NAME|g" \
    -e "s|@OTHER_MAIN_PACKAGE_NAME@|$OTHER_MAIN_PACKAGE_NAME|g" \
    -e "s|@EXTRAS@|$EXTRAS|g" \
    -e "s|@EXTRA_FILES@|$EXTRA_FILES|g" \
    -e "s|@DISTRIB_NAME@|$DISTRIB_NAME|g" \
    -e "s|@TARGET@|$TARGET|g" \
    -e "s|@PYTHON_VERSION@|$PYTHON_VERSION|g" \
    -e "s|@TCLTK_VERSION@|$TCLTK_VERSION|g" \
    -e "s|@PYTHON_VERSION_NEXT@|$PYTHON_VERSION_NEXT|g" \
    -e "s|@BUILD_DOCS@|$BUILD_DOCS|g" \
    -e "s|@BUILD_DOCS_DEPENDS@|$BUILD_DOCS_DEPENDS|g" \
    $*
} # subst ()

#BEGIN-----------------------------------------------------------------
cd "${0%/*}"

if [ $# -ne 1 -o "$1" == "-h" -o "$1" == "-help" -o "$1" == "--help" ]; then
    usage
    if [ $# -ne 1 ]; then
        exit 1
    fi
    exit 0
fi

if [ $1 = "-r" ]; then
    set -- `uname -r`
elif [ $1 = "-a" ]; then
    KERNEL="$(uname -r)"
    if [ ! -d "/usr/realtime-$KERNEL" ]; then
        KERNEL=$(ls -1d /usr/realtime-* 2> /dev/null | cut -d - -f 2- | head -1)
        if [ -z "$KERNEL" ]; then
            echo "no realtime kernels found!"
            exit 1
        fi
    fi
    set -- $KERNEL
fi

TARGET=$1

MODULE_PATH=usr/realtime-$1/modules/linuxcnc
MODULE_EXT=.ko
KERNEL_DEPENDS=linux-image-$1,rtai-modules-$1
KERNEL_HEADERS=linux-headers-$1
EXTRA_FILES="usr/bin/linuxcnc_module_helper"
KERNEL_VERSION=$1
DRIVERS=drivers.files.in
PYTHON_VERSION=$(python -c 'import sys; print sys.version[:3]')
PYTHON_VERSION_NEXT=$(python -c 'import sys; print sys.version[:2] + str(1+int(sys.version[2]))')

# hope this works on other systems too
DISTRIB_NAME=
if [ "$(which lsb_release)" != "" ]; then
    DISTRIB_NAME="$(lsb_release -s -i)-$(lsb_release -s -r)"
elif [ -f /etc/lsb-release ]; then
    source /etc/lsb-release
    DISTRIB_NAME=$DISTRIB_ID-$DISTRIB_RELEASE
fi

if [ -d extras-$DISTRIB_NAME/linuxcnc.files ]; then
	EXTRAS=extras-$DISTRIB_NAME/linuxcnc.files
else
	EXTRAS=extras
fi

BUILD_DOCS=${BUILD_DOCS-1} ;# default=1 is to build docs
case $BUILD_DOCS in
  no|0) BUILD_DOCS=0 ;# pass along 0|1 only
        BUILD_DOCS_DEPENDS=
        ;;
     *) BUILD_DOCS=1
        BUILD_DOCS_DEPENDS="\
        asciidoc (>= 8.5),\n\
        source-highlight,\n\
        dblatex (>= 0.2.12),\n\
        xsltproc,\n\
        groff,\n\
        texlive-lang-cyrillic,\n\
        texlive-lang-french,\n\
        texlive-lang-spanish,\n\
        texlive-lang-german,\n\
        graphviz,\n\
        inkscape\
        "
        ;;
esac
verbose "BUILD_DOCS=${BUILD_DOCS}"
verbose "BUILD_DOCS_DEPENDS=${BUILD_DOCS_DEPENDS}"
case $BUILD_DOCS in
  no|0) echo "Not building docs <BUILD_DOCS=$BUILD_DOCS>" ;;
     *) extra_build $DISTRIB_NAME ;; # set EXTRA_BUILD
esac

tcltk_version   $DISTRIB_NAME # set TCLTK_VERSIOIN
libreadline_dev $DISTRIB_NAME # set LIBREADLINE_DEV

MAIN_PACKAGE_NAME=linuxcnc
OTHER_MAIN_PACKAGE_NAME=linuxcnc-uspace
EXTRA_RECOMMENDS=hostmot2-firmware-all
case $TARGET in
    uspace|sim)
	TARGET=uspace
        MODULE_PATH=usr/lib/linuxcnc/modules
	MODULE_EXT=.so
	KERNEL_DEPENDS=libudev-dev,iptables
	KERNEL_HEADERS=
	KERNEL_VERSION=uspace
	DRIVERS=
        EXTRA_FILES="usr/bin/rtapi_app"
	DISTRIB_NAME=uspace-$DISTRIB_NAME
	MAIN_PACKAGE_NAME=linuxcnc-uspace
        OTHER_MAIN_PACKAGE_NAME=linuxcnc

        EXTRA_RECOMMENDS="$EXTRA_RECOMMENDS, linux-image-rt-amd64 [linux-amd64], linux-image-rt-686-pae [linux-i386]"
    ;;
    2.6.12-magma)
        KERNEL_HEADERS=$KERNEL_HEADERS,gcc-3.4
    ;;
    2.6.15-magma)
        KERNEL_HEADERS=$KERNEL_HEADERS,gcc-4.0
    ;;
    2.6.22.6-magma|2.6.24-16-rtai)
        KERNEL_HEADERS="$KERNEL_HEADERS"
    ;;
    2.6.24-16-rtai)
        KERNEL_HEADERS=$KERNEL_HEADERS,gcc-4.2
    ;;
    2.6.32-122-rtai|3.4-9-rtai-686-pae) ;;
    *)
	echo "your kernel '$TARGET' is not known. There might be needed dependencies which won't get set automatically."
esac

echo "#control: autogenerated from control_*.in files" >|control

echo "#BEGIN control_base.in" >>control
subst control_base.in         >>control
echo "#END   control_base.in" >>control
echo                          >>control

echo "#BEGIN control_main.in" >>control
subst control_main.in         >>control
echo                          >>control
echo "#END   control_main"    >>control

case $BUILD_DOCS in
  no|0) ;;
     *) echo "#BEGIN control_docs"     >>control
        subst control_docs.in          >>control
        echo "#END   control_docs.in"  >>control
        ;;
esac

if [ "$TARGET" == "uspace" ]; then
    cp linuxcnc-dev.files.in linuxcnc-uspace-dev.files
else
    cp linuxcnc-dev.files.in linuxcnc-dev.files
    echo "$MODULE_PATH/Module.symvers" >> linuxcnc-dev.files
fi

subst rules.in > rules; chmod +x rules

if [ -f $EXTRAS/linuxcnc.files ]; then
    subst linuxcnc.files.in $DRIVERS $EXTRAS/linuxcnc.files > $MAIN_PACKAGE_NAME.files
else
    subst linuxcnc.files.in $DRIVERS > $MAIN_PACKAGE_NAME.files
fi

DOCS_PACKAGES=$(echo linuxcnc-doc-{en,fr,es})
for P in $DOCS_PACKAGES; do
    if [ -f $EXTRAS/$P.files ]; then
        cat $P.files.in $EXTRAS/$P.files > $P.files
    else
        cat $P.files.in > $P.files
    fi
done

rm -f ../build-stamp
echo "successfully configured for '$DISTRIB_NAME'-'$TARGET'.."
